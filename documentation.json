{
    "pipes": [],
    "interfaces": [
        {
            "name": "Collection",
            "id": "interface-Collection-3181ea291d4cd87c977be02cc84223999966a3d23ca778b1d500538c8652b946ada034b9f7700540328e59edca4b83d3b4516b20891f90e33f00a517c6329c77",
            "file": "projects/webfullstack-design-system/src/lib/form/form.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Validator {\n  name: string;\n  validator: any;\n  message: string;\n}\nexport interface FieldConfig {\n  label?: string;\n  name: string;\n  placeholder?: string;\n  inputType?: string;\n  options?: string[];\n  collections?: Collection[];\n  type: string;\n  value?: any;\n  validations?: Validator[];\n}\n\n\nexport interface Collection {\n  key: string;\n  value: any;\n}\n",
            "properties": [
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CreateChart",
            "id": "interface-CreateChart-a52081b43b380fbfaa5127538a3c9f3f4a69175aba148019d3c4dae42017df1d0c9683d4dacc4835693bd38820058eba109d3a33b2e8c05131402042220e99f0",
            "file": "projects/webfullstack-design-system/src/lib/chart/chart.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export default interface DataChart {\n  color: string;\n  data : DataChartCoordonate[];\n}\nexport interface DataChartCoordonate {\n  x: number;\n  y: number;\n}\n\nexport interface CreateChart {\n  minX: number;\n  minY :number;\n  maxX :number;\n  maxY :number;\n  unitsPerTickX :number;\n  unitsPerTickY :number;\n}\n\n\nexport interface DataDrawXAxis{\n  width :number;\n  numXTicks :number;\n  tickSize :number;\n  font :string;\n  maxX:number;\n  padding:number;\n}\n\nexport interface DataDrawYAxis{\n  numYTicks :number;\n  tickSize :number; font :string;\n  maxY :number;\n  padding:number;\n}\n\n\nexport interface DataDrawInterLine{\n  numYTicks :number;\n  numXTicks :number;\n  width  :number;\n}\n\nexport interface DataGetLongestValueWidth{\n  numYTicks :number;\n  unitsPerTickY :number;\n  maxY :number;\n font :string;\n}\n",
            "properties": [
                {
                    "name": "maxX",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "maxY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "minX",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "minY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "unitsPerTickX",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "unitsPerTickY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DataChart",
            "id": "interface-DataChart-a52081b43b380fbfaa5127538a3c9f3f4a69175aba148019d3c4dae42017df1d0c9683d4dacc4835693bd38820058eba109d3a33b2e8c05131402042220e99f0",
            "file": "projects/webfullstack-design-system/src/lib/chart/chart.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export default interface DataChart {\n  color: string;\n  data : DataChartCoordonate[];\n}\nexport interface DataChartCoordonate {\n  x: number;\n  y: number;\n}\n\nexport interface CreateChart {\n  minX: number;\n  minY :number;\n  maxX :number;\n  maxY :number;\n  unitsPerTickX :number;\n  unitsPerTickY :number;\n}\n\n\nexport interface DataDrawXAxis{\n  width :number;\n  numXTicks :number;\n  tickSize :number;\n  font :string;\n  maxX:number;\n  padding:number;\n}\n\nexport interface DataDrawYAxis{\n  numYTicks :number;\n  tickSize :number; font :string;\n  maxY :number;\n  padding:number;\n}\n\n\nexport interface DataDrawInterLine{\n  numYTicks :number;\n  numXTicks :number;\n  width  :number;\n}\n\nexport interface DataGetLongestValueWidth{\n  numYTicks :number;\n  unitsPerTickY :number;\n  maxY :number;\n font :string;\n}\n",
            "properties": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataChartCoordonate[]",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DataChartCoordonate",
            "id": "interface-DataChartCoordonate-a52081b43b380fbfaa5127538a3c9f3f4a69175aba148019d3c4dae42017df1d0c9683d4dacc4835693bd38820058eba109d3a33b2e8c05131402042220e99f0",
            "file": "projects/webfullstack-design-system/src/lib/chart/chart.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export default interface DataChart {\n  color: string;\n  data : DataChartCoordonate[];\n}\nexport interface DataChartCoordonate {\n  x: number;\n  y: number;\n}\n\nexport interface CreateChart {\n  minX: number;\n  minY :number;\n  maxX :number;\n  maxY :number;\n  unitsPerTickX :number;\n  unitsPerTickY :number;\n}\n\n\nexport interface DataDrawXAxis{\n  width :number;\n  numXTicks :number;\n  tickSize :number;\n  font :string;\n  maxX:number;\n  padding:number;\n}\n\nexport interface DataDrawYAxis{\n  numYTicks :number;\n  tickSize :number; font :string;\n  maxY :number;\n  padding:number;\n}\n\n\nexport interface DataDrawInterLine{\n  numYTicks :number;\n  numXTicks :number;\n  width  :number;\n}\n\nexport interface DataGetLongestValueWidth{\n  numYTicks :number;\n  unitsPerTickY :number;\n  maxY :number;\n font :string;\n}\n",
            "properties": [
                {
                    "name": "x",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "y",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DataDrawInterLine",
            "id": "interface-DataDrawInterLine-a52081b43b380fbfaa5127538a3c9f3f4a69175aba148019d3c4dae42017df1d0c9683d4dacc4835693bd38820058eba109d3a33b2e8c05131402042220e99f0",
            "file": "projects/webfullstack-design-system/src/lib/chart/chart.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export default interface DataChart {\n  color: string;\n  data : DataChartCoordonate[];\n}\nexport interface DataChartCoordonate {\n  x: number;\n  y: number;\n}\n\nexport interface CreateChart {\n  minX: number;\n  minY :number;\n  maxX :number;\n  maxY :number;\n  unitsPerTickX :number;\n  unitsPerTickY :number;\n}\n\n\nexport interface DataDrawXAxis{\n  width :number;\n  numXTicks :number;\n  tickSize :number;\n  font :string;\n  maxX:number;\n  padding:number;\n}\n\nexport interface DataDrawYAxis{\n  numYTicks :number;\n  tickSize :number; font :string;\n  maxY :number;\n  padding:number;\n}\n\n\nexport interface DataDrawInterLine{\n  numYTicks :number;\n  numXTicks :number;\n  width  :number;\n}\n\nexport interface DataGetLongestValueWidth{\n  numYTicks :number;\n  unitsPerTickY :number;\n  maxY :number;\n font :string;\n}\n",
            "properties": [
                {
                    "name": "numXTicks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "numYTicks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DataDrawXAxis",
            "id": "interface-DataDrawXAxis-a52081b43b380fbfaa5127538a3c9f3f4a69175aba148019d3c4dae42017df1d0c9683d4dacc4835693bd38820058eba109d3a33b2e8c05131402042220e99f0",
            "file": "projects/webfullstack-design-system/src/lib/chart/chart.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export default interface DataChart {\n  color: string;\n  data : DataChartCoordonate[];\n}\nexport interface DataChartCoordonate {\n  x: number;\n  y: number;\n}\n\nexport interface CreateChart {\n  minX: number;\n  minY :number;\n  maxX :number;\n  maxY :number;\n  unitsPerTickX :number;\n  unitsPerTickY :number;\n}\n\n\nexport interface DataDrawXAxis{\n  width :number;\n  numXTicks :number;\n  tickSize :number;\n  font :string;\n  maxX:number;\n  padding:number;\n}\n\nexport interface DataDrawYAxis{\n  numYTicks :number;\n  tickSize :number; font :string;\n  maxY :number;\n  padding:number;\n}\n\n\nexport interface DataDrawInterLine{\n  numYTicks :number;\n  numXTicks :number;\n  width  :number;\n}\n\nexport interface DataGetLongestValueWidth{\n  numYTicks :number;\n  unitsPerTickY :number;\n  maxY :number;\n font :string;\n}\n",
            "properties": [
                {
                    "name": "font",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "maxX",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "numXTicks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "padding",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "tickSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DataDrawYAxis",
            "id": "interface-DataDrawYAxis-a52081b43b380fbfaa5127538a3c9f3f4a69175aba148019d3c4dae42017df1d0c9683d4dacc4835693bd38820058eba109d3a33b2e8c05131402042220e99f0",
            "file": "projects/webfullstack-design-system/src/lib/chart/chart.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export default interface DataChart {\n  color: string;\n  data : DataChartCoordonate[];\n}\nexport interface DataChartCoordonate {\n  x: number;\n  y: number;\n}\n\nexport interface CreateChart {\n  minX: number;\n  minY :number;\n  maxX :number;\n  maxY :number;\n  unitsPerTickX :number;\n  unitsPerTickY :number;\n}\n\n\nexport interface DataDrawXAxis{\n  width :number;\n  numXTicks :number;\n  tickSize :number;\n  font :string;\n  maxX:number;\n  padding:number;\n}\n\nexport interface DataDrawYAxis{\n  numYTicks :number;\n  tickSize :number; font :string;\n  maxY :number;\n  padding:number;\n}\n\n\nexport interface DataDrawInterLine{\n  numYTicks :number;\n  numXTicks :number;\n  width  :number;\n}\n\nexport interface DataGetLongestValueWidth{\n  numYTicks :number;\n  unitsPerTickY :number;\n  maxY :number;\n font :string;\n}\n",
            "properties": [
                {
                    "name": "font",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "maxY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "numYTicks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "padding",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "tickSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DataGetLongestValueWidth",
            "id": "interface-DataGetLongestValueWidth-a52081b43b380fbfaa5127538a3c9f3f4a69175aba148019d3c4dae42017df1d0c9683d4dacc4835693bd38820058eba109d3a33b2e8c05131402042220e99f0",
            "file": "projects/webfullstack-design-system/src/lib/chart/chart.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export default interface DataChart {\n  color: string;\n  data : DataChartCoordonate[];\n}\nexport interface DataChartCoordonate {\n  x: number;\n  y: number;\n}\n\nexport interface CreateChart {\n  minX: number;\n  minY :number;\n  maxX :number;\n  maxY :number;\n  unitsPerTickX :number;\n  unitsPerTickY :number;\n}\n\n\nexport interface DataDrawXAxis{\n  width :number;\n  numXTicks :number;\n  tickSize :number;\n  font :string;\n  maxX:number;\n  padding:number;\n}\n\nexport interface DataDrawYAxis{\n  numYTicks :number;\n  tickSize :number; font :string;\n  maxY :number;\n  padding:number;\n}\n\n\nexport interface DataDrawInterLine{\n  numYTicks :number;\n  numXTicks :number;\n  width  :number;\n}\n\nexport interface DataGetLongestValueWidth{\n  numYTicks :number;\n  unitsPerTickY :number;\n  maxY :number;\n font :string;\n}\n",
            "properties": [
                {
                    "name": "font",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "maxY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "numYTicks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "unitsPerTickY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DatatableHeader",
            "id": "interface-DatatableHeader-76ef52760ba19a6a0eb47feca24ff5afbe9424272c41171ac38370b991e4e44b9f2630da8b879e61f0fefd24ea1bba0447b1d678beeb6b63196e8c1d718202ea",
            "file": "projects/webfullstack-design-system/src/lib/datatable/datatable.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DatatableHeader {\n  label :string,\n  name :string,\n  order : number\n}\n\nexport interface DatatableRowProperty {\n  headerName :string,\n  value : string,\n  headerLabel? :string,\n}\n",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "order",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DatatableRowProperty",
            "id": "interface-DatatableRowProperty-76ef52760ba19a6a0eb47feca24ff5afbe9424272c41171ac38370b991e4e44b9f2630da8b879e61f0fefd24ea1bba0447b1d678beeb6b63196e8c1d718202ea",
            "file": "projects/webfullstack-design-system/src/lib/datatable/datatable.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DatatableHeader {\n  label :string,\n  name :string,\n  order : number\n}\n\nexport interface DatatableRowProperty {\n  headerName :string,\n  value : string,\n  headerLabel? :string,\n}\n",
            "properties": [
                {
                    "name": "headerLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "headerName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "FieldConfig",
            "id": "interface-FieldConfig-3181ea291d4cd87c977be02cc84223999966a3d23ca778b1d500538c8652b946ada034b9f7700540328e59edca4b83d3b4516b20891f90e33f00a517c6329c77",
            "file": "projects/webfullstack-design-system/src/lib/form/form.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Validator {\n  name: string;\n  validator: any;\n  message: string;\n}\nexport interface FieldConfig {\n  label?: string;\n  name: string;\n  placeholder?: string;\n  inputType?: string;\n  options?: string[];\n  collections?: Collection[];\n  type: string;\n  value?: any;\n  validations?: Validator[];\n}\n\n\nexport interface Collection {\n  key: string;\n  value: any;\n}\n",
            "properties": [
                {
                    "name": "collections",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Collection[]",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "inputType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "validations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Validator[]",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Validator",
            "id": "interface-Validator-3181ea291d4cd87c977be02cc84223999966a3d23ca778b1d500538c8652b946ada034b9f7700540328e59edca4b83d3b4516b20891f90e33f00a517c6329c77",
            "file": "projects/webfullstack-design-system/src/lib/form/form.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Validator {\n  name: string;\n  validator: any;\n  message: string;\n}\nexport interface FieldConfig {\n  label?: string;\n  name: string;\n  placeholder?: string;\n  inputType?: string;\n  options?: string[];\n  collections?: Collection[];\n  type: string;\n  value?: any;\n  validations?: Validator[];\n}\n\n\nexport interface Collection {\n  key: string;\n  value: any;\n}\n",
            "properties": [
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "validator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "FormDirective",
            "id": "directive-FormDirective-772286cd0a79b4bef040906ff3bf63141ef89415d6883728a0565979ee9b8d895ffd4b4d3c0e6f530863efcc177b7041e70c7d69b4148b17f676c771461e7cb9",
            "file": "projects/webfullstack-design-system/src/lib/form/form.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  ComponentFactoryResolver,\n  Directive,\n  Input,\n  OnInit,\n  ViewContainerRef\n} from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { FieldConfig } from \"./form.interface\";\nimport { InputComponent } from \"../input/input.component\";\nimport { ButtonComponent } from \"../button/button.component\";\n\nconst componentMapper :any = {\n  input: InputComponent,\n  button: ButtonComponent,\n};\n\n@Directive({\n  selector: \"[dynamicField]\"\n})\nexport class FormDirective implements OnInit {\n  @Input() field!: FieldConfig;\n  @Input() group!: FormGroup;\n  componentRef: any;\n  constructor(\n    private resolver: ComponentFactoryResolver,\n    private container: ViewContainerRef\n  ) {}\n  ngOnInit() {\n    const factory = this.resolver.resolveComponentFactory(\n      componentMapper[this.field.type]\n    );\n    this.componentRef = this.container.createComponent(factory);\n    if(this.field.type === 'input'){\n      this.componentRef.instance.formGroup = this.group;\n      this.componentRef.instance.formControlName = this.field.name;\n    }else if(this.field.type === 'button'){\n      this.componentRef.instance.label = this.field.label;\n      this.componentRef.instance.type = 'submit';\n    }\n\n    if(this.field.collections){\n      this.field.collections.forEach(x=>{\n        this.componentRef.instance[x.key] = x.value;\n      });\n    }\n\n  }\n}\n",
            "selector": "[dynamicField]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "FieldConfig",
                    "decorators": []
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "FormGroup",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "componentRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "OnInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "container",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "container",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-b81b13216678565195b9f197f45f3369115b66fdf95a8759aec50114f2df976eba07a84af547e3044fb3126cafc50bff38a8501d7b0a99a07e19bb1f6cd96ec7",
            "file": "projects/webfullstack-design-system/src/lib/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttonType",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "\"primary\" | \"secondary\" | \"tertiary\" | \"success\" | \"danger\" | \"warning\" | \"info\"",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'sm'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "\"sm\" | \"md\" | \"lg\"",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "\"submit\" | \"reset\" | \"button\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "handleClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getCssClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "{ btn: boolean; 'btn--primary': boolean; 'btn--secondary': boolean; 'btn--tertiary': boolean; 'btn--success': boolean; 'btn--danger': boolean; 'btn--warning': boolean; 'btn--info': boolean; 'btn--sm': boolean; 'btn--md': boolean; 'btn--lg': boolean; }",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFonction permettant de définir les caractéristiques du bouton\n",
                    "description": "<p>Fonction permettant de définir les caractéristiques du bouton</p>\n"
                },
                {
                    "name": "handleClickEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFonction permettant de déclencher l'événement click\n",
                    "description": "<p>Fonction permettant de déclencher l&#39;événement click</p>\n"
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Composant permettant de créer des buttons personnalisés</p>\n<h2 id=\"usage\">Usage</h2>\n<div><pre class=\"line-numbers\"><code class=\"language-ts\">&lt;lib-button [type]=&quot;&#39;success&#39;&quot; [size]=&quot;&#39;lg&#39;&quot; [disabled]=&quot;false&quot;&gt;MonButton&lt;/lib-button&gt;</code></pre></div>",
            "rawdescription": "\n\nComposant permettant de créer des buttons personnalisés\n\n## Usage\n\n```ts\n<lib-button [type]=\"'success'\" [size]=\"'lg'\" [disabled]=\"false\">MonButton</lib-button>\n```\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n/**\n * Composant permettant de créer des buttons personnalisés\n *\n * ## Usage\n *\n * ```ts\n * <lib-button [type]=\"'success'\" [size]=\"'lg'\" [disabled]=\"false\">MonButton</lib-button>\n * ```\n */\n@Component({\n  selector: 'lib-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent implements OnInit {\n\n  @Input() type: 'submit' | 'reset' | 'button' = 'button';\n\n  @Input() buttonType : 'primary' | 'secondary' | 'tertiary' | 'success' | 'danger' | 'warning' | 'info' = 'primary';\n\n  @Input() size : 'sm' | 'md' | 'lg' = 'sm';\n\n  @Input() disabled = false;\n\n  @Input() label = '';\n\n  @Output() handleClick = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Fonction permettant de déclencher l'événement click\n   */\n  handleClickEvent() {\n    this.handleClick.emit();\n  }\n\n  /**\n   * Fonction permettant de définir les caractéristiques du bouton\n   */\n  getCssClasses() {\n    return {\n      'btn': true,\n      'btn--primary': this.buttonType === 'primary',\n      'btn--secondary': this.buttonType === 'secondary',\n      'btn--tertiary': this.buttonType === 'tertiary',\n      'btn--success': this.buttonType === 'success',\n      'btn--danger': this.buttonType === 'danger',\n      'btn--warning': this.buttonType === 'warning',\n      'btn--info': this.buttonType === 'info',\n      'btn--sm': this.size === 'sm',\n      'btn--md': this.size === 'md',\n      'btn--lg': this.size === 'lg',\n    };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../scss/main\";\n\n.btn{\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  transition: 400ms;\n  :hover:enabled{\n    cursor: pointer;\n  }\n  :hover:disabled{\n    cursor: not-allowed;\n    background-color: $disabled-color;\n  }\n  &--primary{\n    color: $light-color;\n    background-color : $primary-color;\n    &:hover{\n      background-color: lighten($primary-color, 20%);\n    }\n  }\n\n  &--secondary{\n    color: $light-color;\n    background-color: $secondary-color;\n    &:hover{\n      background: lighten($secondary-color, 20%);\n    }\n  }\n\n  &--tertiary{\n    color: $dark-color;\n    background-color: $tertiary-color;\n    &:hover{\n      background-color: lighten($tertiary-color, 20%);\n    }\n  }\n\n  &--success{\n    color: $light-color;\n    background-color: $success-color;\n    &:hover{\n      background-color: lighten($success-color, 20%);\n    }\n  }\n\n  &--info{\n    color: $light-color;\n    background-color: $info-color;\n    &:hover{\n      background-color: lighten($info-color, 20%);\n    }\n  }\n\n  &--danger{\n    color: $light-color;\n    background-color: $danger-color;\n    &:hover{\n      background-color: lighten($danger-color, 20%);\n    }\n  }\n\n  &--warning{\n    color: $dark-color;\n    background-color: $warning-color;\n    &:hover{\n      background-color: lighten($warning-color, 20%);\n    }\n\n  }\n\n  &--sm{\n    font-size: 12px;\n    padding: 10px 16px;\n  }\n\n  &--md{\n    font-size: 14px;\n    padding: 11px 20px;\n  }\n\n  &--lg{\n    font-size: 16px;\n    padding: 12px 24px;\n  }\n}\n\n\n\n@mixin lighten($color, $amount){\nmixin-name($color, $amount){\n  color: lighten($color, $amount);\n}\n}\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 29
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button class=\"btn\" [type]=\"type\" [class]=\"getCssClasses()\" [disabled]=\"disabled\" (click)=\"handleClickEvent()\">{{label}}</button>\n"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-5e021fe4325df1278edd0842b52660da6c43407e0cd262c1c5251544dfc226252338ee052ad9ef42c5f71048b4d3a3c4d2c7642e989bf7ac2654be7e6db45881",
            "file": "projects/webfullstack-design-system/src/lib/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-card",
            "styleUrls": [
                "./card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "align",
                    "defaultValue": "'flex-start'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "\"flex-start\" | \"flex-end\" | \"center\"",
                    "decorators": []
                },
                {
                    "name": "borderRadius",
                    "defaultValue": "'12'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "button1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "button2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "buttonItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'alabaster'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"orangeyellow\" | \"raisin\" | \"alabaster\" | \"rajah\"",
                    "decorators": []
                },
                {
                    "name": "description",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "display",
                    "defaultValue": "'buttons'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "\"buttons\" | \"image\" | \"item\"",
                    "decorators": []
                },
                {
                    "name": "elevation",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "\"sm\" | \"md\" | \"lg\" | \"xl\"",
                    "decorators": []
                },
                {
                    "name": "fullWidth",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "headerImage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "imgHeight",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "imgSrc",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "itemImage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "justify",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "\"left\" | \"right\" | \"center\"",
                    "decorators": []
                },
                {
                    "name": "padding",
                    "defaultValue": "'sm'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "\"none\" | \"sm\" | \"md\" | \"lg\" | \"xl\"",
                    "decorators": []
                },
                {
                    "name": "sense",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "textAlign",
                    "defaultValue": "'center'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "\"center\" | \"start\" | \"end\"",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "handleClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "clickEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getBackgroundColor",
                    "args": [],
                    "optional": false,
                    "returnType": "\"linear-gradient(145deg, #ddb863, #ffda76)\" | \"linear-gradient(145deg, #22201f, #292524)\" | \"linear-gradient(145deg, #d4d4cd, #fdfbf4)\" | \"linear-gradient(145deg, #e19442, #ffaf4e)\"",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getColor",
                    "args": [],
                    "optional": false,
                    "returnType": "\"black\" | \"white\"",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getElevation",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPadding",
                    "args": [],
                    "optional": false,
                    "returnType": "\"0\" | \"0.5em 1em\" | \"1em 2em\" | \"1.5em 3em\" | \"2em 4em\"",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'lib-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n\n  @Input() title = '';\n  @Input() subtitle = '';\n  @Input() description = '';\n  @Input() fullWidth = false;\n  @Input() button1: any;//Button\n  @Input() button2: any; //Button\n  @Input() buttonItem: any; //Button\n  @Input() color: 'orangeyellow' | 'raisin' | 'alabaster' | 'rajah' = 'alabaster';\n  @Input() borderRadius = '12'; //Choisir le border radius\n  @Input() elevation: 'sm' | 'md' | 'lg' | 'xl' = 'md';\n  @Input() display: 'buttons' | 'image' | 'item' = 'buttons';\n  @Input() headerImage = '';\n  @Input() imgSrc = '';\n  @Input() justify: 'left' | 'right' | 'center' = 'left';\n  @Input() align: 'flex-start' | 'flex-end' | 'center' = 'flex-start';\n  @Input() textAlign: 'center' | 'start' | 'end' = 'center';\n  @Input() itemImage = '';\n  @Input() width = '';\n  @Input() sense = 'column';\n  @Input() imgHeight = '';\n  @Input() padding: 'none' | 'sm' | 'md' | 'lg' | 'xl' = 'sm';\n  @Input() items: any;\n\n  @Output() handleClick = new EventEmitter();\n\n\n  getBackgroundColor() {\n    switch (this.color) {\n      case 'orangeyellow':\n        return 'linear-gradient(145deg, #ddb863, #ffda76)'\n      case 'raisin':\n        return 'linear-gradient(145deg, #22201f, #292524)'\n      case 'alabaster':\n        return 'linear-gradient(145deg, #d4d4cd, #fdfbf4)'\n      case 'rajah':\n        return 'linear-gradient(145deg, #e19442, #ffaf4e)'\n      default:\n        return 'linear-gradient(145deg, #d4d4cd, #fdfbf4)'\n    }\n  }\n\n  getColor() {\n    switch (this.color) {\n      case 'orangeyellow':\n        return 'black'\n      case 'raisin':\n        return 'white'\n      case 'alabaster':\n        return 'black'\n      case 'rajah':\n        return 'black'\n      default:\n        return 'black'\n    }\n  }\n\n  getElevation() {\n    let col;\n    switch (this.color) {\n      case 'orangeyellow':\n        col = ['#d6b160', '#ffe77c']\n        break;\n      case 'raisin':\n        col = ['#211e1e', '#2b2826']\n        break;\n      case 'alabaster':\n        col = ['#cdccc6', '#ffffff']\n        break;\n      case 'rajah':\n        col = ['#da8f40', '#ffb952']\n        break;\n      default:\n        col = ['#d1d1d1', '#ffffff']\n        break;\n    }\n    switch (this.elevation) {\n      case 'sm':\n        return '10px 10px 20px ' + col[0] + ',-10px -10px 20px ' + col[1]\n      case 'md':\n        return '15px 15px 30px ' + col[0] + ',-15px -15px 30px ' + col[1]\n      case 'lg':\n        return '24px 24px 48px ' + col[0] + ',24px 24px 48px ' + col[1]\n      case 'xl':\n        return '32px 32px 64px ' + col[0] + ',-32px -32px 64px ' + col[1]\n      default:\n        return '10px 10px 20px ' + col[0] + ',-10px -10px 20px ' + col[1]\n    }\n  }\n\n  getPadding() {\n    switch (this.padding) {\n      case 'none':\n        return '0'\n      case 'sm':\n        return '0.5em 1em'\n      case 'md':\n        return '1em 2em'\n      case 'lg':\n        return '1.5em 3em'\n      case 'xl':\n        return '2em 4em'\n      default:\n        return '1em 2em'\n    }\n  }\n\n  clickEvent(){\n    this.handleClick.emit();\n  }\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card {\n  font-family: system-ui;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n\n  &__title {\n    align-items: center;\n    display: flex;\n    flex-wrap: wrap;\n    font-size: 1.25rem;\n    font-weight: bold;\n    letter-spacing: 0.0125em;\n    line-height: 2rem;\n    word-break: break-all;\n    text-transform: uppercase;\n  }\n\n  &__subtitle {\n    font-size: 0.875rem;\n    font-weight: 400;\n    line-height: 1.375rem;\n    letter-spacing: 0.0071428571em;\n    margin-bottom: 1rem;\n    color: #4a4a4a;\n  }\n\n  &__description {\n    font-size: 0.875rem;\n    font-weight: 400;\n    line-height: 1.375rem;\n    letter-spacing: 0.0071428571em;\n    margin-bottom: 1rem;\n  }\n\n  &__buttons {\n    display: flex;\n    width: 100%;\n  }\n\n  &__image {\n    -webkit-box-reflect: below 0px -webkit-gradient(linear, left top, left\n          bottom, from(transparent), color-stop(70%, transparent), to(rgba(250, 250, 250, 0.1)));\n    display: flex;\n    justify-content: center;\n\n    &-header {\n      display: flex;\n      margin-bottom: 1em;\n    }\n  }\n\n  &__content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    &--full-width {\n      width: 100%;\n    }\n  }\n\n  &__items {\n    display: flex;\n    flex-direction: column;\n    width: -webkit-fill-available;\n    margin-bottom: 1em;\n\n    &-image {\n      margin-right: 1em;\n      height: 4em;\n      box-shadow: rgb(26 26 26 / 20%) 0px 7px 6px 4px;\n    }\n\n    &-content {\n      display: flex;\n      flex-direction: column;\n      align-items: flex-start;\n    }\n  }\n}\n\n.orangeyellow {\n  background: #f6cc6e;\n}\n\n.raisin-black {\n  background: #262322;\n}\n\n.alabaster {\n  background: #ecebe4;\n}\n\n.rajah {\n  background: #faa449;\n}\n\nhr {\n  display: block;\n  height: 1px;\n  border: 0;\n  border-top: 1px solid #4b4b4b;\n  margin: 0;\n  padding: 0;\n}\n",
                    "styleUrl": "./card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 118
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card\" *ngIf=\"display=='buttons'\"\n     [style.flex-direction]=\"sense\"\n     [style.background]=\"getBackgroundColor()\"\n     [style.border-radius]=\"borderRadius+'px'\"\n     [style.color]=\"getColor()\"\n     [style.box-shadow]=\"getElevation()\"\n     [style.justify-content]=\"justify\"\n     [style.align-items]=\"align\"\n     [style.text-align]=\"textAlign\"\n     [style.padding]=\"getPadding()\"\n     [style.width]=\"width\">\n\n  <div class=\"card__image-header\" *ngIf=\"headerImage\" [style.margin-bottom]=\"sense == 'column'? '1em':0\"\n       [style.margin-right]=\"sense == 'row'? '1em':0\">\n    <img [src]=\"headerImage\"\n         [style.border-radius]=\"borderRadius+'px'\"\n         [style.height]=\"imgHeight\"\n         style=\"box-shadow: rgb(26 26 26 / 20%) 0 7px 6px 4px;\"\n         alt=\"image\">\n  </div>\n  <div class=\"card__content\"\n       [ngClass]=\"fullWidth ? 'card__content--full-width':''\"\n       [style.justify-content]=\"justify\"\n       [style.align-items]=\"align\">\n    <div class=\"card__title\" *ngIf=\"title\">{{title}}</div>\n    <div class=\"card__subtitle\" *ngIf=\"subtitle\">{{subtitle}}</div>\n    <div class=\"card__description\" *ngIf=\"description; else elseBlock\">{{description}}</div>\n    <ng-template #elseBlock>\n      <ng-content class=\"card__description\"></ng-content>\n    </ng-template>\n    <div class=\"card__items\" *ngIf=\"items\">\n      <div *ngFor=\"let item of items\" style=\"display: flex;flex-direction: column\">\n        <hr>\n        <p style=\"margin: 0.3em 0\">{{item}}</p>\n      </div>\n    </div>\n    <div class=\"buttons\" *ngIf=\"button1 || button2\" [style.justify-content]=\"justify\">\n      <lib-button *ngIf=\"button1\" buttonType=\"secondary\" [disabled]=button1.disabled  size=\"md\" (handleClick)=\"clickEvent()\"\n                  style=\"margin-right: 1em\">{{button1.label}}</lib-button>\n      <lib-button *ngIf=\"button2\" buttonType=\"secondary\" [disabled]=button1.disabled  size=\"md\" (handleClick)=\"clickEvent()\"\n                  style=\"margin-right: 1em\">{{button2.label}}</lib-button>\n    </div>\n  </div>\n</div>\n\n<div class=\"card\" *ngIf=\"display=='image'\"\n     [style.width]=\"width\">\n  <img [src]=\"imgSrc\"\n       alt=\"image\" class=\"card__image\">\n</div>\n\n<div class=\"card\" *ngIf=\"display=='item'\"\n     [style.flex-direction]=\"sense\"\n     [style.background]=\"getBackgroundColor()\"\n     [style.border-radius]=\"borderRadius+'px'\"\n     [style.color]=\"getColor()\"\n     [style.box-shadow]=\"getElevation()\"\n     [style.justify-content]=\"justify\"\n     [style.align-items]=\"align\"\n     [style.padding]=\"getPadding()\"\n     [style.width]=\"width\">\n  <img [src]=\"itemImage\" [style.border-radius]=\"borderRadius+'px'\"\n       alt=\"image\" class=\"card__item-image\">\n  <div class=\"card__item-content\" *ngIf=\"title || subtitle\">\n    <div class=\"card__title\" *ngIf=\"title\">{{title}}</div>\n    <div class=\"card__subtitle\" *ngIf=\"subtitle\" style=\"margin-bottom: 0\">{{subtitle}}</div>\n  </div>\n  <div *ngIf=\"buttonItem\" style=\"position: absolute;right: 1em\">\n    <lib-button *ngIf=\"button1\" buttonType=\"secondary\" [disabled]=button1.disabled size=\"md\" (handleClick)=\"clickEvent()\"\n                style=\"margin-right: 1em\">{{button1.label}}</lib-button>\n    <lib-button *ngIf=\"button2\" buttonType=\"secondary\" [disabled]=button1.disabled  size=\"md\" (handleClick)=\"clickEvent()\"\n                style=\"margin-right: 1em\">{{button2.label}}</lib-button>\n  </div>\n</div>\n"
        },
        {
            "name": "ChartComponent",
            "id": "component-ChartComponent-386bd5eb1adc0bd64de2ea1a5a7e2af991036a33d6fe07d1ec9b93759d04db8c816e27b39d6839f5c3df2384ce01a4106bc8075c2ff8fc4a3d42c4e5b01985a5",
            "file": "projects/webfullstack-design-system/src/lib/chart/chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-chart",
            "styleUrls": [
                "./chart.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "canvasHeigth",
                    "defaultValue": "450",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "canvasWidth",
                    "defaultValue": "550",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "DataChart[]",
                    "decorators": []
                },
                {
                    "name": "maxX",
                    "defaultValue": "140",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "maxY",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "minX",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "minY",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "unitsPerTickX",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "unitsPerTickY",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "axisColor",
                    "defaultValue": "\"#A9A9A9\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "canvas",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'myCanvas', {static: false}"
                        }
                    ]
                },
                {
                    "name": "context",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CanvasRenderingContext2D",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "height",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "onChanges",
                    "defaultValue": "new Subject<SimpleChanges>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "pointRadius",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "scaleX",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "scaleY",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "x",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "y",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 216,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "create",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 203,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "drawInterLine",
                    "args": [
                        {
                            "name": "data",
                            "type": "DataDrawInterLine",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "DataDrawInterLine",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "drawLine",
                    "args": [
                        {
                            "name": "data",
                            "type": "DataChartCoordonate[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "color",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 168,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "DataChartCoordonate[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "color",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "drawXAxis",
                    "args": [
                        {
                            "name": "data",
                            "type": "DataDrawXAxis",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "DataDrawXAxis",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "drawYAxis",
                    "args": [
                        {
                            "name": "data",
                            "type": "DataDrawYAxis",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "DataDrawYAxis",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getLongestValueWidth",
                    "args": [
                        {
                            "name": "data",
                            "type": "DataGetLongestValueWidth",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "DataGetLongestValueWidth",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "LineChart",
                    "args": [
                        {
                            "name": "con",
                            "type": "CreateChart",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "con",
                            "type": "CreateChart",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "transformContext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 197,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "update",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 220,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, Input , SimpleChanges, ViewChild , AfterViewInit , OnChanges , OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs/internal/Subject';\nimport DataChart , {CreateChart, DataChartCoordonate, DataDrawInterLine, DataDrawXAxis, DataDrawYAxis, DataGetLongestValueWidth} from './chart.interface';\n\n@Component({\n  selector: 'lib-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.css']\n})\nexport class ChartComponent implements AfterViewInit , OnChanges , OnDestroy {\n\n  @ViewChild('myCanvas', {static: false}) canvas: ElementRef | undefined;\n  @Input() minX: number = 0;\n  @Input() minY: number = 0;\n  @Input() maxX: number = 140;\n  @Input() maxY: number = 100;\n  @Input() unitsPerTickX: number = 10;\n  @Input() unitsPerTickY: number =10;\n  @Input() data : DataChart[] =[];\n  @Input() canvasHeigth : number = 450;\n  @Input() canvasWidth : number = 550;\n\n  private context!: CanvasRenderingContext2D;\n\n  scaleX :number = 0;\n  scaleY :number = 0;\n  pointRadius :number = 5;\n  x :number = 0;\n  y :number = 0;\n  height :number = 0;\n  axisColor :string= \"#A9A9A9\";\n  onChanges = new Subject<SimpleChanges>();\n\n  constructor() { }\n  ngOnChanges(changes: SimpleChanges): void {\n    this.onChanges.next(changes);\n  }\n\n  ngAfterViewInit(): void {\n    this.create();\n    this.onChanges.subscribe((data:SimpleChanges)=>{\n        this.update();\n    });\n  }\n  ngOnDestroy(){\n    this.onChanges.complete();\n  }\n\n  private LineChart(con :CreateChart) {\n    // user defined properties\n    const minX = con.minX;\n    const minY = con.minY;\n    const maxX = con.maxX;\n    const maxY = con.maxY;\n    const unitsPerTickX = con.unitsPerTickX;\n    const unitsPerTickY = con.unitsPerTickY;\n\n    // constants\n    const padding = 10;\n    const tickSize = 10;\n    const font = \"bold 11pt Arial\";\n\n    const fontHeight = 12;\n\n    // relationships\n    this.context = this.canvas?.nativeElement.getContext(\"2d\");\n    const canvas = this.canvas as ElementRef;\n    const rangeX = maxX - minY;\n    const rangeY = maxY - minY;\n    const numXTicks = Math.round(rangeX / unitsPerTickX);\n    const numYTicks = Math.round(rangeY / unitsPerTickY);\n    this.x = this.getLongestValueWidth({numYTicks, unitsPerTickY , maxY , font}) + padding * 2;\n    this.y = padding * 2;\n    const width = canvas.nativeElement.width - this.x - padding * 2;\n    this.height = canvas.nativeElement.height - this.y - padding - fontHeight;\n    this.scaleX = width / rangeX;\n    this.scaleY = this.height / rangeY;\n\n    // draw x y axis and tick marks\n    this.drawXAxis({    width , numXTicks , tickSize, font , maxX , padding});\n    this.drawYAxis( {  numYTicks ,tickSize, font , maxY , padding});\n    this.drawInterLine({numYTicks , numXTicks , width });\n\n}\n\n  private getLongestValueWidth( data :DataGetLongestValueWidth) {\n    this.context.font = data.font;\n      let longestValueWidth = 0;\n      for (let n = 0; n <= data.numYTicks; n++) {\n          const value = data.maxY - (n * data.unitsPerTickY);\n          longestValueWidth = Math.max(longestValueWidth, this.context.measureText(value.toString()).width);\n      }\n      return longestValueWidth;\n  };\n\n  private drawXAxis( data :DataDrawXAxis ) {\n      const height = this.height ? this.height : 0;\n      this.context.save();\n      this.context.beginPath();\n      this.context.moveTo(this.x, this.y + height);\n      this.context.lineTo(this.x + data.width, this.y + height);\n      this.context.strokeStyle = this.axisColor;\n      this.context.stroke();\n\n\n      // draw labels\n      this.context.font = data.font;\n      this.context.fillStyle = this.axisColor;\n      this.context.textAlign = \"center\";\n      this.context.textBaseline = \"middle\";\n\n      for (let n = 0; n < data.numXTicks; n++) {\n          const label = Math.round((n + 1) * data.maxX / data.numXTicks);\n          this.context.save();\n          this.context.translate((n + 1) * data.width / data.numXTicks + this.x, this.y + height + data.padding);\n          this.context.fillText(label.toString(), 0, 0);\n          this.context.restore();\n      }\n      this.context.restore();\n  };\n\n  private drawYAxis ( data :DataDrawYAxis ) {\n      const height = this.height ? this.height : 0;\n      this.context.save();\n      this.context.beginPath();\n      this.context.moveTo(this.x, this.y);\n      this.context.lineTo(this.x, this.y + height);\n      this.context.strokeStyle = this.axisColor;\n      this.context.stroke();\n      this.context.restore();\n\n\n      // draw values\n      this.context.font = data.font;\n      this.context.fillStyle = this.axisColor;\n      this.context.textAlign = \"right\";\n      this.context.textBaseline = \"middle\";\n\n      for (let n = 0; n < data.numYTicks; n++) {\n          const value = Math.round(data.maxY - n * data.maxY / data.numYTicks);\n          this.context.save();\n          this.context.translate(this.x - data.padding, n * height / data.numYTicks + this.y);\n          this.context.fillText(value.toString(), 0, 0);\n          this.context.restore();\n      }\n      this.context.restore();\n  };\n\n  private drawInterLine( data :DataDrawInterLine ) {\n    const height = this.height ? this.height : 0;\n    for (let n = 0; n < data.numYTicks; n++) {\n      this.context.beginPath();\n      this.context.moveTo(this.x, n * height / data.numYTicks + this.y);\n      this.context.lineTo( this.x + data.width , n * height / data.numYTicks + this.y);\n      this.context.strokeStyle = this.axisColor;\n      this.context.stroke();\n    }\n\n    for (let n = 0; n < data.numXTicks; n++) {\n      this.context.beginPath();\n      this.context.moveTo((n + 1) * data.width / data.numXTicks + this.x, this.y +height);\n      this.context.lineTo((n + 1) * data.width / data.numXTicks + this.x, this.y );\n      this.context.strokeStyle = this.axisColor;\n      this.context.stroke();\n    }\n  }\n\n  private drawLine(data :DataChartCoordonate[], color : string ) {\n      this.context.save();\n      this.transformContext();\n      this.context.lineWidth = 1;\n      this.context.strokeStyle = color;\n      this.context.fillStyle = color;\n      this.context.beginPath();\n      this.context.moveTo(data[0].x * this.scaleX, data[0].y * this.scaleY);\n\n      for (let n = 0; n < data.length; n++) {\n          const point = data[n];\n\n          // draw segment\n          this.context.lineTo(point.x * this.scaleX, point.y * this.scaleY);\n          this.context.stroke();\n          this.context.closePath();\n          this.context.beginPath();\n          this.context.arc(point.x * this.scaleX, point.y * this.scaleY, this.pointRadius, 0, 2 * Math.PI, false);\n          this.context.fill();\n          this.context.closePath();\n\n          // position for next segment\n          this.context.beginPath();\n          this.context.moveTo(point.x * this.scaleX, point.y * this.scaleY);\n      }\n      this.context.restore();\n  };\n\n\n  transformContext() {\n    const height = this.height ? this.height : 0;\n    this.context.translate(this.x, this.y + height);\n    this.context.scale(1, -1);\n  };\n\n  create(){\n    this.LineChart({\n      minX: this.minX,\n      minY: this.minY,\n      maxX: this.maxX,\n      maxY: this.maxY,\n      unitsPerTickX: this.unitsPerTickX,\n      unitsPerTickY: this.unitsPerTickY\n   });\n   for(let i = 0; i < this.data.length; i++){\n    this.drawLine(this.data[i].data, this.data[i].color);\n   }\n  }\n  clear() {\n    this.context.clearRect(0, 0, this.canvas?.nativeElement.width, this.canvas?.nativeElement.height);\n  }\n\n  update(){\n    this.clear();\n    this.create();\n  }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./chart.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 32
            },
            "implements": [
                "AfterViewInit",
                "OnChanges",
                "OnDestroy"
            ],
            "templateData": "<canvas #myCanvas [width]=\"canvasWidth\" [height]=\"canvasHeigth\"></canvas>\n"
        },
        {
            "name": "DatatableComponent",
            "id": "component-DatatableComponent-33cdf3f3e183cff961568787679989adf738180ff1dce37fe981c7205500aec7516658daf7e92f321e6dee02e2a83290be85205e748a7f53a47107a803ec85c0",
            "file": "projects/webfullstack-design-system/src/lib/datatable/datatable.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-datatable",
            "styleUrls": [
                "./datatable.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./datatable.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "\"primary\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "[][]",
                    "decorators": []
                },
                {
                    "name": "headers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "DatatableHeader[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "clickLineEvent",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DatatableRowProperty[][]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "_headers",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DatatableHeader[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClickLine",
                    "args": [
                        {
                            "name": "line",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "line",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { Output, EventEmitter } from '@angular/core';\nimport { DatatableHeader, DatatableRowProperty } from './datatable.interface';\n\n@Component({\n  selector: 'lib-datatable',\n  templateUrl: './datatable.component.html',\n  styleUrls: ['./datatable.component.scss']\n})\nexport class DatatableComponent implements OnInit {\n\n  _headers: DatatableHeader[] = []\n\n  _data: DatatableRowProperty[][] = [];\n\n  get headers():  DatatableHeader[] {\n    return this._headers;\n  }\n  @Input() set headers(value:  DatatableHeader[]) {\n      this._headers = value.sort( (x,y)=>{\n      if(x.order > y.order) return 1;\n      else if(x.order < y.order) return -1;\n      else return 0;\n      });\n  }\n\n  get data():  DatatableRowProperty[][]  {\n    return this._data;\n  }\n\n  @Input() set data(value:  DatatableRowProperty[][] ) {\n    const data :DatatableRowProperty[][] = [];\n    value.forEach((row)=>{\n      const rowData :DatatableRowProperty[]= []\n      this.headers.forEach((header)=>{\n        const currentRow = row.filter((x :any ) => x.headerName == header.name);\n        if(currentRow.length > 0){\n          currentRow[0].headerLabel = header.label;\n          rowData.push(currentRow[0]);\n        }else{\n          rowData.push({headerName: header.name, value: \"\", headerLabel: header.label});\n        }\n      });\n      data.push(rowData);\n    });\n    this._data = data;\n  }\n\n  @Input() color :string = \"primary\";\n\n  @Output() clickLineEvent = new EventEmitter<any>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onClickLine(line:any){\n    this.clickLineEvent.emit(line);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../scss/variables.scss';\n@import '../scss/main.scss';\n\n.container {\n  max-width: 1000px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 10px;\n  padding-right: 10px;\n}\n\n.primary {\n  background-color: $primary-color;\n  color : white;\n}\n.secondary{\n  background-color: $secondary-color;\n  color : white;\n\n}\n.tertiary{\n  background-color: $tertiary-color;\n  color : black;\n}\n\n\n.responsive-table {\n  li {\n    border-radius: 3px;\n    padding: 25px 30px;\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 25px;\n  }\n  .table-header {\n    border-radius: 10px;\n    font-size: 16px;\n    font-weight: 600;\n    text-transform: uppercase;\n    letter-spacing: 0.03em;\n  }\n  .table-row {\n    background-color: #ffffff;\n    box-shadow: 0px 0px 9px 0px rgba(0,0,0,0.1);\n    transition: all .2s ease-in-out;\n  }\n  .table-row:hover {\n    transform: scale(1.05);\n    cursor: pointer;\n  }\n  .col {\n    flex-basis: 25%;\n    text-align: center;\n  }\n\n\n  @media all and (max-width: 767px) {\n    .table-header {\n      display: none;\n    }\n    li {\n      display: block;\n    }\n    .col {\n      flex-basis: 100%;\n\n    }\n    .col {\n      display: flex;\n      padding: 10px 0;\n      &:before {\n        color: #6C7A89;\n        padding-right: 10px;\n        content: attr(data-label);\n        flex-basis: 50%;\n        text-align: right;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./datatable.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 51
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "headers": {
                    "name": "headers",
                    "setSignature": {
                        "name": "headers",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "DatatableHeader[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 19,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "DatatableHeader[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "headers",
                        "type": "[]",
                        "returnType": "DatatableHeader[]",
                        "line": 16
                    }
                },
                "data": {
                    "name": "data",
                    "setSignature": {
                        "name": "data",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "DatatableRowProperty[][]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 31,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "DatatableRowProperty[][]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "data",
                        "type": "[]",
                        "returnType": "[][]",
                        "line": 27
                    }
                }
            },
            "templateData": "<div class=\"container\">\n  <ul class=\"responsive-table\" *ngIf=\"headers.length >0\">\n    <li class=\"table-header\" [ngClass]=\"color\">\n      <div class=\"col title\" *ngFor=\"let header of headers\">{{header.label}}</div>\n    </li>\n    <li *ngFor=\"let row of data\"  class=\"table-row\" (click)=\"onClickLine(row)\">\n      <div class=\"col text\" *ngFor=\"let currentInfo of row\" [attr.data-label]=\"currentInfo.headerLabel\">{{currentInfo.value}}</div>\n    </li>\n  </ul>\n</div>\n"
        },
        {
            "name": "DividerComponent",
            "id": "component-DividerComponent-7e5a44d2a6e2a1eb37d65f8cbad73eb94f3917fc3cb0d6736b7f976b644edabeb01aaf1b72cc6fd92fae3d0b92b3370f858da35bf972d3cf00a64e1f42183d52",
            "file": "projects/webfullstack-design-system/src/lib/divider/divider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "divider",
            "styleUrls": [
                "./divider.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./divider.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'#696969'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "height",
                    "defaultValue": "'1px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "width",
                    "defaultValue": "'256px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'divider',\n  templateUrl: './divider.component.html',\n  styleUrls: ['./divider.component.scss'],\n})\nexport class DividerComponent implements OnInit {\n  @Input() height: string = '1px';\n  @Input() width: string = '256px';\n  @Input() color: string = '#696969';\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./divider.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\n  [style.width]=\"width\"\n  [style.height]=\"height\"\n  [style.background-color]=\"color\"\n></div>\n"
        },
        {
            "name": "FlexDivComponent",
            "id": "component-FlexDivComponent-353a7c6ffc70a91807e45677f34d27edbead9baa67df37f38c8e06f4cf498038c8997218f1d1a3a717806c3c01a5b5ffe2f8200aa0422ee3b5778a7e5c5e7653",
            "file": "projects/webfullstack-design-system/src/lib/flex-div/flex-div.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "flex-div",
            "styleUrls": [
                "./flex-div.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./flex-div.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "alignItems",
                    "defaultValue": "'start'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "direction",
                    "defaultValue": "'row'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "fullHeight",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "fullWidth",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "justifyContent",
                    "defaultValue": "'start'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "wrap",
                    "defaultValue": "'nowrap'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'flex-div',\n  templateUrl: './flex-div.component.html',\n  styleUrls: ['./flex-div.component.scss'],\n})\nexport class FlexDivComponent implements OnInit {\n  @Input() fullWidth = false;\n  @Input() fullHeight = false;\n  @Input() justifyContent: string = 'start';\n  @Input() direction: string = 'row';\n  @Input() alignItems: string = 'start';\n  @Input() wrap: string = 'nowrap';\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".flex-div {\n  display: flex;\n  &--full-width {\n    width: 100%;\n  }\n  &--full-height {\n    height: 100%;\n  }\n}\n",
                    "styleUrl": "./flex-div.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\n  class=\"flex-div\"\n  [ngClass]=\"fullWidth ? 'flex-div--full-width' : ''\"\n  [ngClass]=\"fullHeight ? 'flex-div--full-height' : ''\"\n  [style.justify-content]=\"justifyContent\"\n  [style.flex-direction]=\"direction\"\n  [style.align-items]=\"alignItems\"\n  [style.flex-wrap]=\"wrap\"\n>\n  <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "FormComponent",
            "id": "component-FormComponent-dbd3cfae9e5c58c78d7399c095160e19cbef7e10bbde73de9a5c8d1d1f606d313b40b74a7709c6a6498569239b730eb336e2df7187bf32459ee49915129d2fcd",
            "file": "projects/webfullstack-design-system/src/lib/form/form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-form",
            "styleUrls": [
                "./form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "fields",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "FieldConfig[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "submit",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "form",
                    "defaultValue": "this.fb.group({})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "bindValidations",
                    "args": [
                        {
                            "name": "validations",
                            "type": "Validator[] | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "validations",
                            "type": "Validator[] | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createControl",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validateAllFormFields",
                    "args": [
                        {
                            "name": "formGroup",
                            "type": "FormGroup",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "formGroup",
                            "type": "FormGroup",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FieldConfig, Validator } from './form.interface';\n\n@Component({\n  selector: 'lib-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss']\n})\nexport class FormComponent implements OnInit {\n\n  @Input() fields: FieldConfig[] = [];\n\n  @Output() submit: EventEmitter<any> = new EventEmitter<any>();\n\n  form: FormGroup =this.fb.group({});\n\n  get value() {\n    return this.form.value;\n  }\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() :void {\n    this.form = this.createControl();\n  }\n\n  onSubmit(event: Event) {\n    event.preventDefault();\n    event.stopPropagation();\n    console.log(this.form.value);\n    if (this.form.valid) {\n      this.submit.emit(this.form.value);\n    } else {\n      this.validateAllFormFields(this.form);\n    }\n  }\n\n  createControl() :FormGroup{\n    const group = this.fb.group({});\n    this.fields.forEach(field => {\n      if (field.type === \"button\") return;\n      const control = this.fb.control(\n        field.value,\n        this.bindValidations(field.validations || [])\n      );\n      group.addControl(field.name as string, control);\n    });\n    return group;\n  }\n  bindValidations(validations: Validator[] | undefined) {\n    if (validations) {\n      const validList :any[]= [];\n      validations.forEach(valid => {\n        validList.push(valid.validator);\n      });\n      return Validators.compose(validList);\n    }\n    return null;\n  }\n\n  validateAllFormFields(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n      if(control) control.markAsTouched({ onlySelf: true });\n    });\n  }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host-context(.form-margin) form {\n  display: flex;\n  flex-direction: column;\n  gap : 10px;\n}\n",
                    "styleUrl": "./form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "value": {
                    "name": "value",
                    "getSignature": {
                        "name": "value",
                        "type": "",
                        "returnType": "",
                        "line": 18
                    }
                }
            },
            "templateData": "<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit($event)\">\n  <ng-container *ngFor=\"let field of fields;\" dynamicField [field]=\"field\" [group]=\"form\">\n  </ng-container>\n</form>\n"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-42a987aedb8358720ba2c63cb057916edb4ede4c2399017e436e489b142d36e628ad83155c02261bc07ea70ed04a8b62466cf35e82dc473c5526341bcc8e15bc",
            "file": "projects/webfullstack-design-system/src/lib/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-input",
            "styleUrls": [
                "./input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "FormGroup",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'Veuillez saisir une valeur'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "\"text\" | \"password\" | \"email\" | \"tel\" | \"search\" | \"number\"",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n@Component({\n  selector: 'lib-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss']\n})\nexport class InputComponent implements OnInit {\n\n  @Input() type : 'text' | 'password' | 'email' | 'tel' | 'search' | 'number' = 'text';\n\n  @Input() placeholder = 'Veuillez saisir une valeur';\n\n  @Input() disabled = false;\n\n  @Input() value = '';\n\n  @Input() formControlName? = '';\n  @Input() formGroup? : FormGroup;\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../scss/main.scss';\n\n.input{\n  width: 100%;\n  padding: 7px;\n  margin: 0;\n  border: none;\n  background: gray;\n  font-size: 1.2rem;\n  font-family: 'Source Sans Pro', sans-serif;\n  color: $dark-color;\n  outline: none;\n  appearance: none;\n  box-sizing: border-box;\n  ::placeholder {\n    color: $dark-color;\n  }\n\n}\n",
                    "styleUrl": "./input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *ngIf=\"formGroup && formControlName ; else elseBlock\"  [formGroup]=\"formGroup\">\n  <input class=\"input\" [type]=\"type\" [placeholder]=\"placeholder\" [disabled]=\"disabled\"  [formControlName]=\"formControlName\"/>\n</div>\n\n<ng-template #elseBlock>\n  <input class=\"input\" [type]=\"type\" [placeholder]=\"placeholder\" [disabled]=\"disabled\"/>\n</ng-template>\n"
        },
        {
            "name": "SnackbarComponent",
            "id": "component-SnackbarComponent-2dbcd363a826ce870d7a5f84c785647ec9b11f7bd9875b8e20dd03391b09419da35a4c4b58f6919ae6be1277e59eeac588fc02076121bee34bdc996e89ac1d24",
            "file": "projects/webfullstack-design-system/src/lib/snackbar/snackbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "snackbar",
            "styleUrls": [
                "./snackbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./snackbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autoHideDuration",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "backgroundColor",
                    "defaultValue": "'black'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "message",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": " | undefined",
                    "decorators": []
                },
                {
                    "name": "open",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "textColor",
                    "defaultValue": "'white'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.scss'],\n})\nexport class SnackbarComponent implements OnInit {\n  @Input() open: boolean = false;\n  @Input() onClose: (() => void) | undefined;\n  @Input() message: string = '';\n  @Input() autoHideDuration: number = 0;\n  @Input() textColor: string = 'white';\n  @Input() backgroundColor: string = 'black';\n\n  handleClose() {\n    if (this.onClose) {\n      this.onClose();\n    }\n\n    this.open = false;\n  }\n\n  constructor() {}\n\n  ngOnInit(): void {\n    if (this.autoHideDuration) {\n      setTimeout(() => {\n        this.open = false;\n      }, this.autoHideDuration);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".snackbar {\n  width: 288px;\n  padding: 12px;\n  position: absolute;\n  bottom: 24px;\n  left: 24px;\n  border-radius: 10px;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.close-icon {\n  cursor: pointer;\n}\n",
                    "styleUrl": "./snackbar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\n  class=\"snackbar\"\n  [style.color]=\"textColor\"\n  [style.background]=\"backgroundColor\"\n  [style.display]=\"open ? 'flex' : 'none'\"\n>\n  <div>\n    {{ message }}\n  </div>\n\n  <svg height=\"14px\" width=\"14px\" class=\"close-icon\" (click)=\"handleClose()\">\n    <path\n      d=\"M8.664,7l4.992-4.992A1.177,1.177,0,0,0,11.992.344L7,5.336,2.009.344A1.177,1.177,0,0,0,.345,2.008L5.336,7,.345,11.991a1.177,1.177,0,1,0,1.664,1.664L7,8.663l4.992,4.992a1.177,1.177,0,0,0,1.664-1.664Z\"\n      [style.fill]=\"textColor\"\n    />\n  </svg>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "WebfullstackDesignSystemModule",
            "id": "module-WebfullstackDesignSystemModule-2c012dc05e97759dbc9a41f67fec632ce673a0ab6b47e5b7d2ecb0bb6b776f88ea535f7d32f7239478e14fb65587cc3168d6366dc9acefd2f32b0229ade7b2e2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/webfullstack-design-system/src/lib/webfullstack-design-system.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { CardComponent } from './card/card.component';\nimport { ChartComponent } from './chart/chart.component';\nimport { DividerComponent } from './divider/divider.component';\nimport { FlexDivComponent } from './flex-div/flex-div.component';\nimport { SnackbarComponent } from './snackbar/snackbar.component';\nimport { ButtonComponent } from './button/button.component';\nimport { DatatableComponent } from './datatable/datatable.component';\nimport { InputComponent } from \"./input/input.component\";\nimport {CommonModule} from \"@angular/common\";\nimport { FormComponent } from './form/form.component';\nimport {FormDirective} from \"./form/form.directive\";\n\nconst COMPONENTS = [\n  CardComponent,\n  ChartComponent,\n  FlexDivComponent,\n  DividerComponent,\n  DatatableComponent,\n  SnackbarComponent,\n  ButtonComponent,\n  InputComponent,\n  FormComponent,\n  FormDirective\n];\n\n@NgModule({\n  declarations: [...COMPONENTS , ],\n  imports: [CommonModule, ReactiveFormsModule],\n  exports: [...COMPONENTS],\n})\nexport class WebfullstackDesignSystemModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "ChartComponent"
                        },
                        {
                            "name": "DatatableComponent"
                        },
                        {
                            "name": "DividerComponent"
                        },
                        {
                            "name": "FlexDivComponent"
                        },
                        {
                            "name": "FormComponent"
                        },
                        {
                            "name": "FormDirective"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "SnackbarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "ChartComponent"
                        },
                        {
                            "name": "DatatableComponent"
                        },
                        {
                            "name": "DividerComponent"
                        },
                        {
                            "name": "FlexDivComponent"
                        },
                        {
                            "name": "FormComponent"
                        },
                        {
                            "name": "FormDirective"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "SnackbarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Base",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Base",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/webfullstack-design-system/src/lib/flex-div/flex-div.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "button1",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  label: 'Bouton 1',\n  disabled: false,\n  ev: test,\n}"
            },
            {
                "name": "button2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  label: 'Bouton 2',\n  disabled: false,\n  ev: test,\n}"
            },
            {
                "name": "ColImage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "componentMapper",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/webfullstack-design-system/src/lib/form/form.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any",
                "defaultValue": "{\n  input: InputComponent,\n  button: ButtonComponent,\n}"
            },
            {
                "name": "COMPONENTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/webfullstack-design-system/src/lib/webfullstack-design-system.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  CardComponent,\n  ChartComponent,\n  FlexDivComponent,\n  DividerComponent,\n  DatatableComponent,\n  SnackbarComponent,\n  ButtonComponent,\n  InputComponent,\n  FormComponent,\n  FormDirective\n]"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/webfullstack-design-system/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/webfullstack-design-system/src/lib/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Image",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "img",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'https://static.fnac-static.com/multimedia/Images/FR/NR/94/43/d7/14107540/1507-1/tsp20220322173128/Nostalgia.jpg'"
            },
            {
                "name": "Item",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "['Item 1', 'Item 2']"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/webfullstack-design-system/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "RowImage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/webfullstack-design-system/src/lib/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\n  component: ButtonComponent,\n  props: args,\n  template:\n  `<lib-button [size]=\"size\" [type]=\"type\">\n        Label\n    </lib-button>`\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CardComponent>",
                "defaultValue": "(args: CardComponent) => ({\n  component: CardComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/webfullstack-design-system/src/lib/flex-div/flex-div.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FlexDivComponent>",
                "defaultValue": "(args: FlexDivComponent) => ({\n  props: args,\n  template: `\n  <flex-div [justifyContent]=\"justifyContent\" [alignItems]=\"alignItems\" [direction]=\"direction\" [wrap]=\"wrap\" [fullWidth]=\"fullWidth\" [fullHeight]=\"fullHeight\">\n  <div [style.background]=\"'blue'\">Item 1</div>\n  <div [style.background]=\"'yellow'\">Item 2</div>\n  <div [style.background]=\"'red'\">Item 3</div>\n  <div [style.background]=\"'green'\">Item 4</div>\n  <div [style.background]=\"'brown'\">Item 5</div>\n  <div [style.background]=\"'pink'\">Item 6</div>\n  </flex-div>`,\n})"
            }
        ],
        "functions": [
            {
                "name": "test",
                "file": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "projects/webfullstack-design-system/src/lib/card/card.stories.ts": [
                {
                    "name": "Base",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "button1",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  label: 'Bouton 1',\n  disabled: false,\n  ev: test,\n}"
                },
                {
                    "name": "button2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  label: 'Bouton 2',\n  disabled: false,\n  ev: test,\n}"
                },
                {
                    "name": "ColImage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Image",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "img",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'https://static.fnac-static.com/multimedia/Images/FR/NR/94/43/d7/14107540/1507-1/tsp20220322173128/Nostalgia.jpg'"
                },
                {
                    "name": "Item",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "['Item 1', 'Item 2']"
                },
                {
                    "name": "RowImage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CardComponent>",
                    "defaultValue": "(args: CardComponent) => ({\n  component: CardComponent,\n  props: args,\n})"
                }
            ],
            "projects/webfullstack-design-system/src/lib/flex-div/flex-div.stories.ts": [
                {
                    "name": "Base",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/webfullstack-design-system/src/lib/flex-div/flex-div.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/webfullstack-design-system/src/lib/flex-div/flex-div.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FlexDivComponent>",
                    "defaultValue": "(args: FlexDivComponent) => ({\n  props: args,\n  template: `\n  <flex-div [justifyContent]=\"justifyContent\" [alignItems]=\"alignItems\" [direction]=\"direction\" [wrap]=\"wrap\" [fullWidth]=\"fullWidth\" [fullHeight]=\"fullHeight\">\n  <div [style.background]=\"'blue'\">Item 1</div>\n  <div [style.background]=\"'yellow'\">Item 2</div>\n  <div [style.background]=\"'red'\">Item 3</div>\n  <div [style.background]=\"'green'\">Item 4</div>\n  <div [style.background]=\"'brown'\">Item 5</div>\n  <div [style.background]=\"'pink'\">Item 6</div>\n  </flex-div>`,\n})"
                }
            ],
            "projects/webfullstack-design-system/src/lib/form/form.directive.ts": [
                {
                    "name": "componentMapper",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/webfullstack-design-system/src/lib/form/form.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "defaultValue": "{\n  input: InputComponent,\n  button: ButtonComponent,\n}"
                }
            ],
            "projects/webfullstack-design-system/src/lib/webfullstack-design-system.module.ts": [
                {
                    "name": "COMPONENTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/webfullstack-design-system/src/lib/webfullstack-design-system.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  CardComponent,\n  ChartComponent,\n  FlexDivComponent,\n  DividerComponent,\n  DatatableComponent,\n  SnackbarComponent,\n  ButtonComponent,\n  InputComponent,\n  FormComponent,\n  FormDirective\n]"
                }
            ],
            "projects/webfullstack-design-system/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/webfullstack-design-system/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/webfullstack-design-system/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/webfullstack-design-system/src/lib/button/Button.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/webfullstack-design-system/src/lib/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/webfullstack-design-system/src/lib/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\n  component: ButtonComponent,\n  props: args,\n  template:\n  `<lib-button [size]=\"size\" [type]=\"type\">\n        Label\n    </lib-button>`\n})"
                }
            ]
        },
        "groupedFunctions": {
            "projects/webfullstack-design-system/src/lib/card/card.stories.ts": [
                {
                    "name": "test",
                    "file": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/webfullstack-design-system/src/lib/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 27,
                "coverageCount": "3/11",
                "status": "medium"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/31",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "test",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Base",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "button1",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "button2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ColImage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Image",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "img",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Item",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RowImage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/chart/chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/34",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/chart/chart.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CreateChart",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/chart/chart.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataChart",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/chart/chart.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataChartCoordonate",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/chart/chart.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataDrawInterLine",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/chart/chart.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataDrawXAxis",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/chart/chart.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataDrawYAxis",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/chart/chart.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataGetLongestValueWidth",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/datatable/datatable.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatatableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/datatable/datatable.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DatatableHeader",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/datatable/datatable.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DatatableRowProperty",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/divider/divider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DividerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/flex-div/flex-div.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlexDivComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/flex-div/flex-div.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Base",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/flex-div/flex-div.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/form/form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/form/form.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FormDirective",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/form/form.directive.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "componentMapper",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/form/form.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Collection",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/form/form.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FieldConfig",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/form/form.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Validator",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/snackbar/snackbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SnackbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/lib/webfullstack-design-system.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMPONENTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/webfullstack-design-system/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}